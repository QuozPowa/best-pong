{"version":3,"sources":["../../src/common/AsteroidsGameEngine.js"],"names":["players_keys","AsteroidsGameEngine","options","physicsEngine","P2PhysicsEngine","gameEngine","world","defaultContactMaterial","friction","restitution","gravity","p2","wall_material","Material","on","preStepCustom","bind","postStepCustom","Object","assign","gameWidth","ships","lives","gameHeight","maxAsteroidSpeed","walls_by_alias","balls","ballRadius","w_bot","Wall","position","TwoVector","angle","addObjectToWorld","bot","w_top","Math","PI","top","w_left","left","w_right","right","serializer","registerClass","Ship","Ball","p2Body","maxSpeed","x","velocity","y","pow","a","atan2","cos","sin","queryObjects","instanceType","ball","refreshFromPhysics","stepNumber","isReenact","keys","playerId","playerShip","queryObject","parseInt","Keys","power","place","impulse","physicsObj","applyImpulse","up","down","inputData","input","randnum","random","round","shipsnb","ship","getShipsNb","s","push","randvx","rand","vx","randvy","vy","console","log","GameEngine"],"mappings":"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","sourcesContent":["import { GameEngine, P2PhysicsEngine, TwoVector } from 'lance-gg';\nimport Ball from './Ball';\nimport Ship from './Ship';\nimport Wall from './Wall';\n\nvar players_keys = {};\n\nexport default class AsteroidsGameEngine extends GameEngine {\n\n    constructor(options) {\n        super(options);\n\n        // create physics with no friction; wrap positions after each step\n        this.physicsEngine = new P2PhysicsEngine({ gameEngine: this });\n        let world = this.physicsEngine.world;\n        world.defaultContactMaterial.friction = 0;\n        world.defaultContactMaterial.restitution = 1;\n        world.gravity = [0, 0];\n\n        let p2 = this.physicsEngine.p2;\n\n        var wall_material = new p2.Material();\n\n        this.on('preStep', this.preStepCustom.bind(this));\n        this.on('postStep', this.postStepCustom.bind(this));\n        \n        // game variables\n        Object.assign(this, { gameWidth: 8,\n             ships: { 'bot': [], 'top': [], 'left': [], 'right': [] },\n              lives: 30, gameHeight: 8, maxAsteroidSpeed: 0.25, walls_by_alias: {},\n               balls: [], ballRadius: 0.1, wall_material });\n\n\n\n\n\n    }\n\n    // If the body is out of space bounds, warp it to the other side\n    warpAll() {\n    }\n\n    addWalls() {\n        let walls_by_alias = {};\n        let w_bot = new Wall(this, {}, {\n            position: new TwoVector(0, -this.gameHeight / 2),\n            angle: 0\n        });\n        this.addObjectToWorld(w_bot);\n        walls_by_alias.bot = w_bot;\n\n        let w_top = new Wall(this, {}, {\n            position: new TwoVector(0, this.gameHeight / 2),\n            angle: Math.PI\n        });// Top\n        this.addObjectToWorld(w_top);\n        walls_by_alias.top = w_top;\n\n        let w_left = new Wall(this, {}, {\n            position: new TwoVector(-this.gameWidth / 2, 0),\n            angle: -Math.PI / 2\n        });// Left\n        this.addObjectToWorld(w_left);\n        walls_by_alias.left = w_left;\n\n        let w_right = new Wall(this, {}, {\n            position: new TwoVector(this.gameWidth / 2, 0),\n            angle: Math.PI / 2\n        }); // Right\n        this.addObjectToWorld(w_right);\n        walls_by_alias.right = w_right;\n\n        this.walls_by_alias = walls_by_alias;\n    }\n\n    registerClasses(serializer) {\n        serializer.registerClass(Ship);\n        serializer.registerClass(Ball);\n        serializer.registerClass(Wall);\n    }\n\n    maxSpeed(p2Body, maxSpeed) {\n        var x = p2Body.velocity.x;\n        var y = p2Body.velocity.y;\n\n        \n        if (Math.pow(x, 2) + Math.pow(y, 2) > Math.pow(maxSpeed, 2)) {\n            var a = Math.atan2(y, x);\n            x = -1 * Math.cos(a) * maxSpeed;\n            y = -1 * Math.sin(a) * maxSpeed;\n            p2Body.velocity.x = x;\n            p2Body.velocity.y = y;\n        }\n        \n        return p2Body;\n    }\n\n    postStepCustom(){\n        let balls = this.world.queryObjects({ instanceType: Ball });\n\n        for(let ball of balls){\n            ball.velocity.x = 0;\n            ball.velocity.y = 0;\n            ball.refreshFromPhysics();\n        }\n    }\n\n    preStepCustom(stepNumber, isReenact) {\n       \n\n\n        for (let playerId of Object.keys(players_keys)) {\n\n\n            // handle keyboard presses\n            let playerShip = this.world.queryObject({ playerId: parseInt(playerId), instanceType: Ship });\n\n\n            if (playerShip) {\n\n                let Keys = players_keys[playerId];\n\n                let power = 1;\n\n                if (playerShip.place === 'top' || playerShip.place === 'bot') {\n                    if (Keys.right) {\n                        let impulse = [power, 0];\n                        playerShip.physicsObj.applyImpulse(impulse);\n\n                    }\n                    if (Keys.left) {\n                        let impulse = [power * (-1), 0];\n                        playerShip.physicsObj.applyImpulse(impulse);\n\n                    }\n                }\n\n\n                if (playerShip.place === 'left' || playerShip.place === 'right') {\n                    if (Keys.up) {\n                        let impulse = [0, power];\n                        playerShip.physicsObj.applyImpulse(impulse);\n\n                    }\n                    if (Keys.down) {\n                        let impulse = [0, power * (-1)];\n                        playerShip.physicsObj.applyImpulse(impulse);\n\n                    }\n                }\n\n                //this.emit('shoot', playerShip);\n                playerShip.refreshFromPhysics();\n            }\n\n        }\n    }\n\n\n\n    processInput(inputData, playerId) {\n\n        super.processInput(inputData, playerId);\n\n        if (inputData.input === 'updateKeys') {\n            let Keys = inputData.options.Keys;\n            players_keys[playerId] = Keys;\n        }\n\n\n    }\n\n    // returns a random number between -0.5 and 0.5\n    rand() {\n        let randnum = Math.random() * 2;\n        return Math.round(randnum);\n    }\n\n    getShipsNb() {\n        let ships = this.world.queryObjects({ instanceType: Ship });\n\n\n\n        let shipsnb = [0, 0, 0, 0]\n        for (let ship of ships) {\n            if (ship.place === 'bot') {\n                shipsnb[0]++;\n            } else if (ship.place === 'top') {\n                shipsnb[1]++;\n            } else if (ship.place === 'left') {\n                shipsnb[2]++;\n            } else if (ship.place === 'right') {\n                shipsnb[3]++;\n            }\n        }\n        return shipsnb;\n    }\n\n    // create ship\n    addShip(playerId) {\n\n\n\n        let shipsnb = this.getShipsNb();\n\n        let position = null;\n        let place = null;\n        if (shipsnb[0] === 0) {\n            position = new TwoVector(0, -this.gameWidth / 2);\n            place = 'bot';\n        } else if (shipsnb[1] === 0) {\n            position = new TwoVector(0, this.gameWidth / 2);\n            place = 'top';\n        } else if (shipsnb[2] === 0) {\n            position = new TwoVector(-this.gameWidth / 2, 0);\n            place = 'left';\n        } else if (shipsnb[3] === 0) {\n            position = new TwoVector(this.gameWidth / 2, 0);\n            place = 'right';\n        }\n        let s = new Ship(this, {}, {\n            playerId: playerId,\n            position: position\n        });\n        this.ships[place].push(s);\n        s.place = place;\n        s.lives = this.lives;\n        this.addObjectToWorld(s);\n\n    }\n\n    // create asteroids\n    addball() {\n        let randvx = this.rand();\n\n        let vx;\n\n        if (randvx === 0) {\n            vx = (-1) * this.maxAsteroidSpeed;\n        } else if (randvx === 1) {\n            vx = this.maxAsteroidSpeed;\n        } else if (randvx === 2) {\n            vx = 0;\n        }\n        let randvy = this.rand();\n        let vy = this.maxAsteroidSpeed;\n        if (randvy === 0) {\n            vy = (-1) * this.maxAsteroidSpeed;\n        } else if (randvy === 1) {\n            vy = this.maxAsteroidSpeed;\n        } else if (randvy === 2 && !vx === 0) {\n            vy = 0;\n        }\n\n        console.log(vx);\n        console.log(vy);\n\n        // Create asteroid Body\n        let a = new Ball(this, {}, {\n        });\n        this.addObjectToWorld(a);\n        a.physicsObj.applyImpulse([vx, vy]);\n    }\n\n\n}\n\n"],"file":"AsteroidsGameEngine.js"}