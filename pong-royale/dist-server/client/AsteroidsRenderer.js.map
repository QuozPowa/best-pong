{"version":3,"sources":["../../src/client/AsteroidsRenderer.js"],"names":["ctx","game","canvas","gameWidth","gameHeight","AsteroidsRenderer","gameEngine","clientEngine","document","createElement","width","height","body","appendChild","getContext","lineWidth","fillStyle","t","dt","fillRect","results","save","translate","zoom","scale","world","forEachObject","id","obj","Ship","drawShip","physicsObj","push","place","lives","Ball","drawBall","Wall","drawWall","drawWalls","updateStatus","restore","shows","resultdiv","getElementById","innerHTML","table","res","tr","cells","createTextNode","beginPath","arc","position","shapes","radius","Math","PI","fill","stroke","ball","moveTo","lineTo","Renderer"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,GAAG,GAAG,IAAV;AACA,IAAIC,IAAI,GAAG,IAAX;AACA,IAAIC,MAAM,GAAG,IAAb;AAEA,IAAIC,SAAJ;AACA,IAAIC,UAAJ;;IAEqBC,iB;;;;;AAEjB,6BAAYC,UAAZ,EAAwBC,YAAxB,EAAsC;AAAA;;AAAA;;AAClC,2FAAMD,UAAN,EAAkBC,YAAlB;AACAN,IAAAA,IAAI,GAAGK,UAAP,CAFkC,CAIlC;;AACAJ,IAAAA,MAAM,GAAGM,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAT;AACAN,IAAAA,SAAS,GAAGD,MAAM,CAACQ,KAAP,GAAe,GAA3B;AACAN,IAAAA,UAAU,GAAGF,MAAM,CAACS,MAAP,GAAgB,GAA7B;AACAH,IAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BX,MAA1B;AAEAF,IAAAA,GAAG,GAAGE,MAAM,CAACY,UAAP,CAAkB,IAAlB,CAAN;AACAd,IAAAA,GAAG,CAACe,SAAJ,GAAgB,IAAhB;AACAf,IAAAA,GAAG,CAACgB,SAAJ,GAAgB,OAAhB;AAZkC;AAarC;;;;yBAEIC,C,EAAGC,E,EAAI;AAAA;;AACR,kFAAWD,CAAX,EAAcC,EAAd,EADQ,CAGR;;;AACAlB,MAAAA,GAAG,CAACmB,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBhB,SAAnB,EAA8BC,UAA9B;AAEA,UAAIgB,OAAO,GAAG,EAAd,CANQ,CAOR;AACA;AACA;;AACApB,MAAAA,GAAG,CAACqB,IAAJ;AACArB,MAAAA,GAAG,CAACsB,SAAJ,CAAcnB,SAAS,GAAG,CAA1B,EAA6BC,UAAU,GAAG,CAA1C,EAXQ,CAWsC;;AAC9CH,MAAAA,IAAI,CAACsB,IAAL,GAAYpB,SAAS,GAAGC,UAAZ,GAAyBD,SAAS,GAAGF,IAAI,CAACE,SAA1C,GAAsDC,UAAU,GAAGH,IAAI,CAACG,UAApF;AACAJ,MAAAA,GAAG,CAACwB,KAAJ,CAAUvB,IAAI,CAACsB,IAAf,EAAqB,CAACtB,IAAI,CAACsB,IAA3B,EAbQ,CAa2B;AAEnC;;AAEAtB,MAAAA,IAAI,CAACwB,KAAL,CAAWC,aAAX,CAAyB,UAACC,EAAD,EAAKC,GAAL,EAAa;AAClC,YAAIA,GAAG,YAAYC,gBAAnB,EAAyB;AACrB,UAAA,MAAI,CAACC,QAAL,CAAcF,GAAG,CAACG,UAAlB;;AACAX,UAAAA,OAAO,CAACY,IAAR,CAAa;AAAE,qBAASJ,GAAG,CAACK,KAAf;AAAsB,qBAASL,GAAG,CAACM;AAAnC,WAAb;AACH,SAHD,MAIK,IAAIN,GAAG,YAAYO,gBAAnB,EAAyB,MAAI,CAACC,QAAL,CAAcR,GAAG,CAACG,UAAlB,EAAzB,KACA,IAAIH,GAAG,YAAYS,gBAAnB,EAAyB,MAAI,CAACC,QAAL,CAAcV,GAAG,CAACG,UAAlB;AACjC,OAPD;AAQA,WAAKQ,SAAL,GAzBQ,CA2BR;;AACA,WAAKC,YAAL;AACAxC,MAAAA,GAAG,CAACyC,OAAJ;AACA,WAAKC,KAAL,CAAWtB,OAAX;AACH;;;0BAEKA,O,EAAS;AACX,UAAIuB,SAAS,GAAGnC,QAAQ,CAACoC,cAAT,CAAwB,QAAxB,CAAhB;AACAD,MAAAA,SAAS,CAACE,SAAV,GAAsB,EAAtB;AACA,UAAIC,KAAK,GAAGtC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ;AAHW;AAAA;AAAA;;AAAA;AAIX,6BAAgBW,OAAhB,8HAAyB;AAAA,cAAhB2B,GAAgB;AACrB,cAAIC,EAAE,GAAGxC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAT;AAEAuC,UAAAA,EAAE,CAACnC,WAAH,CAAeL,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAf;AACAuC,UAAAA,EAAE,CAACnC,WAAH,CAAeL,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAf;AAEAuC,UAAAA,EAAE,CAACC,KAAH,CAAS,CAAT,EAAYpC,WAAZ,CAAwBL,QAAQ,CAAC0C,cAAT,CAAwBH,GAAG,CAACd,KAA5B,CAAxB;AACAe,UAAAA,EAAE,CAACC,KAAH,CAAS,CAAT,EAAYpC,WAAZ,CAAwBL,QAAQ,CAAC0C,cAAT,CAAwBH,GAAG,CAACb,KAA5B,CAAxB;AAEAY,UAAAA,KAAK,CAACjC,WAAN,CAAkBmC,EAAlB;AACH;AAdU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeXL,MAAAA,SAAS,CAAC9B,WAAV,CAAsBiC,KAAtB;AACH;;;mCAEc;AAEX;;;;;;;;;;;;;AAgBH;;;6BAEQlC,I,EAAM;AAEXZ,MAAAA,GAAG,CAACmD,SAAJ;AACAnD,MAAAA,GAAG,CAACoD,GAAJ,CACIxC,IAAI,CAACyC,QAAL,CAAc,CAAd,CADJ,EAEIzC,IAAI,CAACyC,QAAL,CAAc,CAAd,CAFJ,EAGIzC,IAAI,CAAC0C,MAAL,CAAY,CAAZ,EAAeC,MAHnB,EAII,CAJJ,EAKI,IAAIC,IAAI,CAACC,EALb;AAOAzD,MAAAA,GAAG,CAAC0D,IAAJ;AACA1D,MAAAA,GAAG,CAAC2D,MAAJ;AAEH;;;6BAGQC,I,EAAM;AAEX5D,MAAAA,GAAG,CAACmD,SAAJ;AACAnD,MAAAA,GAAG,CAACoD,GAAJ,CACIQ,IAAI,CAACP,QAAL,CAAc,CAAd,CADJ,EAEIO,IAAI,CAACP,QAAL,CAAc,CAAd,CAFJ,EAGIO,IAAI,CAACN,MAAL,CAAY,CAAZ,EAAeC,MAHnB,EAII,CAJJ,EAKI,IAAIC,IAAI,CAACC,EALb;AAOAzD,MAAAA,GAAG,CAAC0D,IAAJ;AACA1D,MAAAA,GAAG,CAAC2D,MAAJ;AACH;;;gCAEW;AACR3D,MAAAA,GAAG,CAACmD,SAAJ;AACAnD,MAAAA,GAAG,CAAC6D,MAAJ,CAAW,CAAC5D,IAAI,CAACE,SAAN,GAAkB,CAA7B,EAAgC,CAACF,IAAI,CAACG,UAAN,GAAmB,CAAnD;AACAJ,MAAAA,GAAG,CAAC8D,MAAJ,CAAW7D,IAAI,CAACE,SAAL,GAAiB,CAA5B,EAA+B,CAACF,IAAI,CAACG,UAAN,GAAmB,CAAlD;AACAJ,MAAAA,GAAG,CAAC8D,MAAJ,CAAW7D,IAAI,CAACE,SAAL,GAAiB,CAA5B,EAA+BF,IAAI,CAACG,UAAL,GAAkB,CAAjD;AACAJ,MAAAA,GAAG,CAAC8D,MAAJ,CAAW,CAAC7D,IAAI,CAACE,SAAN,GAAkB,CAA7B,EAAgCF,IAAI,CAACG,UAAL,GAAkB,CAAlD;AACAJ,MAAAA,GAAG,CAAC8D,MAAJ,CAAW,CAAC7D,IAAI,CAACE,SAAN,GAAkB,CAA7B,EAAgC,CAACF,IAAI,CAACG,UAAN,GAAmB,CAAnD;AACAJ,MAAAA,GAAG,CAAC2D,MAAJ;AACH;;;6BAEQ/C,I,EAAM;AACX;;;;;;AAMH;;;;EAvI0CmD,iB","sourcesContent":["import { Renderer } from 'lance-gg';\nimport Ball from '../common/Ball';\nimport Wall from '../common/Wall';\nimport Ship from '../common/Ship';\n\nlet ctx = null;\nlet game = null;\nlet canvas = null;\n\nlet gameWidth;\nlet gameHeight;\n\nexport default class AsteroidsRenderer extends Renderer {\n\n    constructor(gameEngine, clientEngine) {\n        super(gameEngine, clientEngine);\n        game = gameEngine;\n\n        // Init canvas element and add it to the DOM\n        canvas = document.createElement(\"CANVAS\");\n        gameWidth = canvas.width = 300;\n        gameHeight = canvas.height = 300;\n        document.body.appendChild(canvas);\n\n        ctx = canvas.getContext(\"2d\");\n        ctx.lineWidth = 0.05;\n        ctx.fillStyle = \"white\";\n    }\n\n    draw(t, dt) {\n        super.draw(t, dt);\n\n        // Clear the canvas\n        ctx.fillRect(0, 0, gameWidth, gameHeight);\n\n        var results = [];\n        // Transform the canvas\n        // Note that we need to flip the y axis since Canvas pixel coordinates\n        // goes from top to bottom, while physics does the opposite.\n        ctx.save();\n        ctx.translate(gameWidth / 2, gameHeight / 2); // Translate to the center\n        game.zoom = gameWidth < gameHeight ? gameWidth / game.gameWidth : gameHeight / game.gameHeight;\n        ctx.scale(game.zoom, -game.zoom);  // Zoom in and flip y axis\n\n        // Draw all things\n\n        game.world.forEachObject((id, obj) => {\n            if (obj instanceof Ship) {\n                this.drawShip(obj.physicsObj);\n                results.push({ 'place': obj.place, 'lives': obj.lives });\n            }\n            else if (obj instanceof Ball) this.drawBall(obj.physicsObj);\n            else if (obj instanceof Wall) this.drawWall(obj.physicsObj);\n        });\n        this.drawWalls();\n\n        // update status and restore\n        this.updateStatus();\n        ctx.restore();\n        this.shows(results);\n    }\n\n    shows(results) {\n        let resultdiv = document.getElementById(\"result\");\n        resultdiv.innerHTML = \"\";\n        let table = document.createElement('table');\n        for (let res of results) {\n            var tr = document.createElement('tr');\n\n            tr.appendChild(document.createElement('td'));\n            tr.appendChild(document.createElement('td'));\n\n            tr.cells[0].appendChild(document.createTextNode(res.place))\n            tr.cells[1].appendChild(document.createTextNode(res.lives));\n\n            table.appendChild(tr);\n        }\n        resultdiv.appendChild(table);\n    }\n\n    updateStatus() {\n\n        /*\n        let playerShip = this.gameEngine.world.queryObject({ playerId: this.gameEngine.playerId });\n\n        if (!playerShip) {\n            if (this.lives !== undefined)\n                document.getElementById('gameover').classList.remove('hidden');\n            return;\n        }\n\n        // update lives if necessary\n        if (playerShip.playerId === this.gameEngine.playerId && this.lives !== playerShip.lives) {\n            document.getElementById('lives').innerHTML = 'Lives ' + playerShip.lives;\n            this.lives = playerShip.lives;\n        }\n        */\n\n    }\n\n    drawShip(body) {\n\n        ctx.beginPath();\n        ctx.arc(\n            body.position[0],\n            body.position[1],\n            body.shapes[0].radius,\n            0,\n            2 * Math.PI\n        );\n        ctx.fill();\n        ctx.stroke();\n\n    }\n\n\n    drawBall(ball) {\n\n        ctx.beginPath();\n        ctx.arc(\n            ball.position[0],\n            ball.position[1],\n            ball.shapes[0].radius,\n            0,\n            2 * Math.PI\n        );\n        ctx.fill();\n        ctx.stroke();\n    }\n\n    drawWalls() {\n        ctx.beginPath();\n        ctx.moveTo(-game.gameWidth / 2, -game.gameHeight / 2);\n        ctx.lineTo(game.gameWidth / 2, -game.gameHeight / 2);\n        ctx.lineTo(game.gameWidth / 2, game.gameHeight / 2);\n        ctx.lineTo(-game.gameWidth / 2, game.gameHeight / 2);\n        ctx.lineTo(-game.gameWidth / 2, -game.gameHeight / 2);\n        ctx.stroke();\n    }\n\n    drawWall(body) {\n        /*\n        ctx.beginPath();\n        ctx.moveTo(-gameWidth / 2, -gameHeight / 2);\n        ctx.lineTo(gameWidth / 2, -gameHeight / 2);\n        ctx.stroke();\n        */\n    }\n\n}\n"],"file":"AsteroidsRenderer.js"}